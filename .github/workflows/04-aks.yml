name: 04-aks

on:
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  IMAGE_NAME: simpleweb
  # IMAGE_NAME: ${{ github.repository }} # returns HoussemDellai/github-actions-course : problem with uppercase
  IMAGE_TAG: latest #1.0.${{ github.run_number }} # GITHUB_RUN_NUMBER }}

  CLUSTER_NAME: lab05c-aks-slu
  RESOURSE_GROUP: AZ204-1128
  AZURE_CONTAINER_REGISTRY: lab05bacrslu
  REGISTRY_URL: lab05bacrslu.azurecr.io

jobs:
  deploy-aks:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - uses: actions/checkout@v3

      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build image on ACR
        uses: azure/CLI@7378ce2ca3c38b4b063feb7a4cbe384fef978055
        with:
          azcliversion: 2.42.0
          inlineScript: |
            az configure --defaults acr=${{ env.AZURE_CONTAINER_REGISTRY }}
            az acr build -t ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:latest -t ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # - name: Set AKS context
      #   id: set-context
      #   uses: azure/aks-set-context@v3
      #   with:
      #     resource-group: '${{ env.RESOURSE_GROUP }}' 
      #     cluster-name: '${{ env.CLUSTER_NAME }}'

      # - name: Setup kubectl
      #   id: install-kubectl
      #   uses: azure/setup-kubectl@v3

      # # Deploy the Docker image to the IKS cluster
      # - name: Deploy to IKS
      #   run: |
      #     kubectl create secret docker-registry pullsecret --docker-server=https://ghcr.io/ --docker-username=notneeded--docker-password=${{ secrets.GHCR_PAT }}

      # - name: Deploy to AKS
      #   id: deploy-aks
      #   uses: Azure/k8s-deploy@v4
      #   with:
      #     namespace: 'default'
      #     manifests: |
      #        manifests/deployment.yml
      #        manifests/service.yml
      #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
      #     pull: true 
